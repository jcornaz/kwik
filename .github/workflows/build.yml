name: Build

on:
  push:
    branches:
      - main
      - next
      - '*.*.x'

  pull_request:
    branches:
      - '*'

jobs:
  verify_linux:

    strategy:
      matrix:
        java: [8, 11, 14]

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: gradle-cache-ubuntu-java${{ matrix.java }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.kt*') }}
          restore-keys: gradle-cache-ubuntu-java${{ matrix.java }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: JVM tests
        run: ./gradlew jvmTest

      - name: Check Kwik
        if: job.status == 'success' && matrix.java == 8
        run: ./gradlew check

      - name: Check example
        if: job.status == 'success' && matrix.java == 8
        run: ./gradlew -p example check -Dinclude=true

      - name: Publish detekt report
        if: matrix.java == 8
        uses: actions/upload-artifact@v1
        with:
          name: detekt-report
          path: build/reports/detekt/detekt.html

      - name: Publish test results
        if: matrix.java == 8
        uses: actions/upload-artifact@v1
        with:
          name: test-report
          path: build/reports/allTests/

      - name: Publish code coverage reports
        if: matrix.java == 8
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

      - name: Publish documentation
        if: job.status == 'success' && matrix.java == 8
        uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: build/site/

  verify_windows:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: gradle-cache-windows-java8-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.kt*') }}
          restore-keys: gradle-cache-windows-java8-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Check kwik
        run: ./gradlew check

      - name: Check example
        run: ./gradlew -p example check -Dinclude=true

  release-dry-run:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Setup NodeJS
        uses: actions/setup-node@v2.1.1
        with:
          node-version: '14'

      - name: Release dry-run
        run: npx standard-version --dry-run
